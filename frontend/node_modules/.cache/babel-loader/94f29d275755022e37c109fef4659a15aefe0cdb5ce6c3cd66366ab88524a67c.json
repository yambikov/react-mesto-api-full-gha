{"ast":null,"code":"var _jsxFileName = \"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as auth from \"../utils/auth\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  handleLogin\n}) => {\n  _s();\n  const [formValue, setFormValue] = useState({\n    password: \"\",\n    email: \"\"\n  });\n  const navigate = useNavigate();\n  const [isFormValid, setIsFormValid] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    auth.login(formValue.password, formValue.email).then(data => {\n      if (data.token) {\n        setFormValue({\n          username: \"\",\n          password: \"\"\n        });\n        handleLogin();\n        // setEmail(formValue.email)\n        navigate(\"/\", {\n          replace: true\n        });\n      }\n    }).catch(err => console.log(err));\n  };\n\n  //   auth.authorize(formValue.username, formValue.password)\n  //   .then((data) => {\n  //     if (data.jwt){\n  //       setFormValue({username: '', password: ''});\n  //       handleLogin();\n  //       navigate('/diary', {replace: true});\n  //     }\n  //   })\n  //   .catch(err => console.log(err));\n  // }\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValue({\n      ...formValue,\n      [name]: value\n    });\n    validateForm();\n  };\n\n  // Функция валидации для проверки, является ли форма валидной\n  const validateForm = () => {\n    const {\n      email,\n      password\n    } = formValue;\n    const isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    const isPasswordValid = password.length >= 6;\n    setIsFormValid(isEmailValid && isPasswordValid);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth__form\",\n        name: \"registration\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"auth__title\",\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth__item\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          minLength: 2,\n          maxLength: 30,\n          autoComplete: \"off\",\n          required: true,\n          value: formValue.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-error-name error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth__item\",\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          required: true,\n          autoComplete: \"off\",\n          value: formValue.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-error-link error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `auth__button ${isFormValid ? \"auth__button_type_active\" : \"\"}`,\n          type: \"submit\",\n          disabled: !isFormValid,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"dzOIRAqCXOzLY0Q2xKORP804NFA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","auth","Link","useNavigate","jsxDEV","_jsxDEV","Login","handleLogin","_s","formValue","setFormValue","password","email","navigate","isFormValid","setIsFormValid","handleSubmit","e","preventDefault","login","then","data","token","username","replace","catch","err","console","log","handleChange","name","value","target","validateForm","isEmailValid","test","isPasswordValid","length","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","minLength","maxLength","autoComplete","required","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React, {useState} from \"react\"\nimport * as auth from \"../utils/auth\"\nimport {Link, useNavigate} from 'react-router-dom';\n\nconst Login = ({handleLogin}) => {\n  const [formValue, setFormValue] = useState({\n    password: \"\",\n    email: \"\",\n  })\n  const navigate = useNavigate()\n\n  const [isFormValid, setIsFormValid] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    auth.login(formValue.password, formValue.email)\n      .then((data) => {\n        if (data.token) {\n          setFormValue({username: \"\", password: \"\"})\n          handleLogin()\n          // setEmail(formValue.email)\n          navigate(\"/\", {replace: true})\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  //   auth.authorize(formValue.username, formValue.password)\n  //   .then((data) => {\n  //     if (data.jwt){\n  //       setFormValue({username: '', password: ''});\n  //       handleLogin();\n  //       navigate('/diary', {replace: true});\n  //     }\n  //   })\n  //   .catch(err => console.log(err));\n  // }\n\n  const handleChange = (e) => {\n    const {name, value} = e.target\n\n    setFormValue({\n      ...formValue,\n      [name]: value,\n    })\n\n    validateForm()\n  }\n\n  // Функция валидации для проверки, является ли форма валидной\n  const validateForm = () => {\n    const {email, password} = formValue\n\n    const isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    const isPasswordValid = password.length >= 6\n\n    setIsFormValid(isEmailValid && isPasswordValid)\n  }\n\n  return (\n    <main>\n      <section className=\"auth\">\n        <form\n          className=\"auth__form\"\n          name=\"registration\"\n          onSubmit={handleSubmit}\n        >\n          <h2 className=\"auth__title\">Вход</h2>\n          <input\n            className=\"auth__item\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            minLength={2}\n            maxLength={30}\n            autoComplete=\"off\"\n            required\n            value={formValue.email}\n            onChange={handleChange}\n          />\n          <span className=\"input-error-name error\" />\n          <input\n            className=\"auth__item\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Пароль\"\n            required\n            autoComplete=\"off\"\n            value={formValue.password}\n            onChange={handleChange}\n          />\n          <span className=\"input-error-link error\" />\n\n          <button\n            className={`auth__button ${\n              isFormValid ? \"auth__button_type_active\" : \"\"\n            }`}\n            type=\"submit\"\n            disabled={!isFormValid}\n          >\n            Войти\n          </button>\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default Login\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
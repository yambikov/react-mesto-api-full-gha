{"ast":null,"code":"var _jsxFileName = \"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as auth from \"../utils/auth\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  handleLogin\n}) => {\n  _s();\n  const [formValue, setFormValue] = useState({\n    password: \"\",\n    email: \"\"\n  });\n  const navigate = useNavigate();\n  const [isFormValid, setIsFormValid] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    function onLogin() {\n      auth.login(formValue.password, formValue.email).then(data => {\n        if (data.token) {\n          setFormValue({\n            username: \"\",\n            password: \"\"\n          });\n          handleLogin();\n          navigate(\"/\", {\n            replace: true\n          });\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormValue({\n      ...formValue,\n      [name]: value\n    });\n    validateForm();\n  };\n\n  // Функция валидации для проверки, является ли форма валидной\n  const validateForm = () => {\n    const {\n      email,\n      password\n    } = formValue;\n    const isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n    const isPasswordValid = password.length >= 6;\n    setIsFormValid(isEmailValid && isPasswordValid);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"auth\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"auth__form\",\n        name: \"registration\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"auth__title\",\n          children: \"\\u0412\\u0445\\u043E\\u0434\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth__item\",\n          name: \"email\",\n          type: \"email\",\n          placeholder: \"Email\",\n          minLength: 2,\n          maxLength: 30,\n          autoComplete: \"off\",\n          required: true,\n          value: formValue.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-error-name error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth__item\",\n          name: \"password\",\n          type: \"password\",\n          placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n          required: true,\n          autoComplete: \"off\",\n          value: formValue.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-error-link error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `auth__button ${isFormValid ? \"auth__button_type_active\" : \"\"}`,\n          type: \"submit\",\n          disabled: !isFormValid,\n          children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"dzOIRAqCXOzLY0Q2xKORP804NFA=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","auth","Link","useNavigate","jsxDEV","_jsxDEV","Login","handleLogin","_s","formValue","setFormValue","password","email","navigate","isFormValid","setIsFormValid","handleSubmit","e","preventDefault","onLogin","login","then","data","token","username","replace","catch","err","console","log","handleChange","name","value","target","validateForm","isEmailValid","test","isPasswordValid","length","children","className","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","minLength","maxLength","autoComplete","required","onChange","disabled","_c","$RefreshReg$"],"sources":["/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport * as auth from \"../utils/auth\"\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst Login = ({ handleLogin }) => {\n  const [formValue, setFormValue] = useState({\n    password: \"\",\n    email: \"\",\n  })\n\n  const navigate = useNavigate()\n\n  const [isFormValid, setIsFormValid] = useState(false)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    function onLogin() {\n      auth.login(formValue.password, formValue.email)\n      .then((data) => {\n        if (data.token) {\n          setFormValue({ username: \"\", password: \"\" })\n          handleLogin()\n          navigate(\"/\", { replace: true })\n        }\n      })\n      .catch((err) => console.log(err))\n    }\n  }\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n\n    setFormValue({\n      ...formValue,\n      [name]: value,\n    })\n\n    validateForm()\n  }\n\n  // Функция валидации для проверки, является ли форма валидной\n  const validateForm = () => {\n    const { email, password } = formValue\n\n    const isEmailValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    const isPasswordValid = password.length >= 6\n\n    setIsFormValid(isEmailValid && isPasswordValid)\n  }\n\n  return (\n    <main>\n      <section className=\"auth\">\n        <form\n          className=\"auth__form\"\n          name=\"registration\"\n          onSubmit={handleSubmit}\n        >\n          <h2 className=\"auth__title\">Вход</h2>\n          <input\n            className=\"auth__item\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"Email\"\n            minLength={2}\n            maxLength={30}\n            autoComplete=\"off\"\n            required\n            value={formValue.email}\n            onChange={handleChange}\n          />\n          <span className=\"input-error-name error\" />\n          <input\n            className=\"auth__item\"\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Пароль\"\n            required\n            autoComplete=\"off\"\n            value={formValue.password}\n            onChange={handleChange}\n          />\n          <span className=\"input-error-link error\" />\n\n          <button\n            className={`auth__button ${isFormValid ? \"auth__button_type_active\" : \"\"\n              }`}\n            type=\"submit\"\n            disabled={!isFormValid}\n          >\n            Войти\n          </button>\n        </form>\n      </section>\n    </main>\n  )\n}\n\nexport default Login\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
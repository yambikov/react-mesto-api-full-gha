{"ast":null,"code":"var _jsxFileName = \"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/App.js\",\n  _s = $RefreshSig$();\n// Импорты React и необходимых компонентов и стилей\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport apiConfig from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport { Routes, Route } from \"react-router-dom\";\nimport ProtectedRouteElement from \"./ProtectedRoute\";\n// import { Navigate } from \"react-router-dom\"\nimport InfoTooltip from \"./InfoTooltip\";\nimport successedImage from \"../images/info-tooltip-success.svg\";\nimport failImage from \"../images/info-tooltip-error.svg\";\nimport * as auth from \"../utils/auth\";\nimport { useNavigate } from 'react-router-dom';\n\n// Основной компонент приложения\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Стейт для хранения состояния авторизации\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  // Стейт для хранения массива карточек\n  const [cards, setCards] = useState([]);\n\n  // Стейт для хранения данных о текущем пользователе\n  const [currentUser, setCurrentUser] = useState({});\n\n  // Стейты для управления видимостью попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false);\n  const [isInfoTooltipSuccessed, setIsInfoTooltipSuccessed] = useState(false);\n  // const [email, setEmail] = useState('')\n\n  // Стейт для отображения попапа с изображением\n  const [selectedCard, setSelectedCard] = useState({}); // {name, link}\n\n  const navigate = useNavigate();\n\n  // Проверка залогинен ли пользователь при загрузке страницы\n  useEffect(() => {\n    handleTokenCheck();\n  }, []);\n\n  // Загрузка карточек с сервера при монтировании компонента\n  useEffect(() => {\n    apiConfig.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  // Загрузка данных о текущем пользователе с сервера\n  useEffect(() => {\n    apiConfig.getUserInfoApi().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  // Проверка токена\n  const handleTokenCheck = () => {\n    if (localStorage.getItem('jwt')) {\n      const token = localStorage.getItem('jwt');\n      auth.checkToken(token).then(res => {\n        if (res) {\n          setLoggedIn(true);\n          console.log(res.data);\n          navigate(\"/\", {\n            replace: true\n          });\n          return res.email;\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n\n  // Обработчик лайка карточки\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id)\n\n    // Отправляем запрос в API для лайка или дизлайка в зависимости от наличия лайка\n    ;\n    (isLiked ? apiConfig.deleteLike(card._id) : apiConfig.putLike(card._id)).then(res => {\n      setCards(state => state.map(c => c._id === card._id ? res : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // Обработчик удаления карточки\n  function handleCardDelete(card) {\n    apiConfig.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id === card._id ? false : true));\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // Обработчики кликов по кнопкам попапов и карточкам\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard);\n  }\n\n  // Закрытие всех попапов\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setSelectedCard({});\n    setIsInfoTooltipOpen(false);\n  }\n\n  // Обновление данных пользователя\n  function handleUpdateUser(data) {\n    apiConfig.patchUserInfo(data).then(res => {\n      setCurrentUser(res);\n    }).then(closeAllPopups).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // Обновление аватара пользователя\n  function handleUpdateAvatar(data) {\n    apiConfig.patchAvatar(data).then(res => {\n      setCurrentUser(res);\n    }).then(closeAllPopups).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // Добавление новой карточки\n  function handleAddPlaceSubmit(data) {\n    apiConfig.postCard(data).then(res => {\n      setCards([res, ...cards]);\n    }).then(closeAllPopups).catch(err => {\n      console.log(err);\n    });\n  }\n\n  // Что происходит при логауте\n  function onSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem(\"jwt\");\n  }\n\n  // Что происходит при логИне\n  const onLogin = () => {\n    setLoggedIn(true);\n  };\n\n  // Рендеринг компонента\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root brd!\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          signOut: onSignOut\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: onLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(ProtectedRouteElement, {\n              element: Main // Рендерим Main, если пользователь авторизован\n              ,\n              loggedIn: loggedIn,\n              onEditProfile: handleEditProfileClick,\n              onAddPlace: handleAddPlaceClick,\n              onEditAvatar: handleEditAvatarClick,\n              onCardClick: handleCardClick,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete,\n              cards: cards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isEditProfilePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateUser: handleUpdateUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isEditAvatarPopupOpen,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isAddPlacePopupOpen,\n          onClose: closeAllPopups,\n          onUpdateCard: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          card: selectedCard,\n          onClose: closeAllPopups\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n          isOpen: isInfoTooltipOpen,\n          onClose: closeAllPopups,\n          image: isInfoTooltipSuccessed ? successedImage : failImage,\n          alt: isInfoTooltipSuccessed ? \"Успешная регистрация\" : \"Ошибка регистрации\",\n          message: isInfoTooltipSuccessed ? \"Вы успешно зарегистрировались!\" : \"Что-то пошло не так! Попробуйте ещё раз.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4uzVQBizO2RYw2g1UCzhfPL/W9k=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Main","Footer","ImagePopup","apiConfig","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","Routes","Route","ProtectedRouteElement","InfoTooltip","successedImage","failImage","auth","useNavigate","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","cards","setCards","currentUser","setCurrentUser","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoTooltipOpen","setIsInfoTooltipOpen","isInfoTooltipSuccessed","setIsInfoTooltipSuccessed","selectedCard","setSelectedCard","navigate","handleTokenCheck","getInitialCards","then","res","catch","err","console","log","getUserInfoApi","localStorage","getItem","token","checkToken","data","replace","email","handleCardLike","card","isLiked","likes","some","i","_id","deleteLike","putLike","state","map","c","handleCardDelete","deleteCard","filter","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","closeAllPopups","handleUpdateUser","patchUserInfo","handleUpdateAvatar","patchAvatar","handleAddPlaceSubmit","postCard","onSignOut","removeItem","onLogin","Provider","value","children","className","signOut","fileName","_jsxFileName","lineNumber","columnNumber","path","element","handleLogin","onEditProfile","onAddPlace","onEditAvatar","onCardClick","onCardLike","onCardDelete","isOpen","onClose","onUpdateUser","onUpdateAvatar","onUpdateCard","image","alt","message","_c","$RefreshReg$"],"sources":["/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["// Импорты React и необходимых компонентов и стилей\nimport React, { useState, useEffect } from \"react\"\nimport Header from \"./Header\"\nimport Main from \"./Main\"\nimport Footer from \"./Footer\"\nimport ImagePopup from \"./ImagePopup\"\nimport apiConfig from \"../utils/Api\"\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\"\nimport EditProfilePopup from \"./EditProfilePopup\"\nimport EditAvatarPopup from \"./EditAvatarPopup\"\nimport AddPlacePopup from \"./AddPlacePopup\"\nimport Login from \"./Login\"\nimport Register from \"./Register\"\nimport { Routes, Route } from \"react-router-dom\"\nimport ProtectedRouteElement from \"./ProtectedRoute\"\n// import { Navigate } from \"react-router-dom\"\nimport InfoTooltip from \"./InfoTooltip\"\nimport successedImage from \"../images/info-tooltip-success.svg\"\nimport failImage from \"../images/info-tooltip-error.svg\"\nimport * as auth from \"../utils/auth\"\nimport { useNavigate } from 'react-router-dom';\n\n\n\n// Основной компонент приложения\nfunction App() {\n  // Стейт для хранения состояния авторизации\n  const [loggedIn, setLoggedIn] = useState(false)\n\n  // Стейт для хранения массива карточек\n  const [cards, setCards] = useState([])\n\n  // Стейт для хранения данных о текущем пользователе\n  const [currentUser, setCurrentUser] = useState({})\n\n  // Стейты для управления видимостью попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false)\n  const [isInfoTooltipSuccessed, setIsInfoTooltipSuccessed] = useState(false)\n  // const [email, setEmail] = useState('')\n\n  // Стейт для отображения попапа с изображением\n  const [selectedCard, setSelectedCard] = useState({}) // {name, link}\n\n  const navigate = useNavigate()\n\n  // Проверка залогинен ли пользователь при загрузке страницы\n  useEffect(() => {\n    handleTokenCheck()\n  }, [])\n\n  // Загрузка карточек с сервера при монтировании компонента\n  useEffect(() => {\n    apiConfig\n      .getInitialCards()\n      .then((res) => {\n        setCards(res)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  // Загрузка данных о текущем пользователе с сервера\n  useEffect(() => {\n    apiConfig\n      .getUserInfoApi()\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n\n\n  // Проверка токена\n  const handleTokenCheck = () => {\n    if (localStorage.getItem('jwt')) {\n      const token = localStorage.getItem('jwt');\n      auth.checkToken(token)\n        .then((res) => {\n          if (res) {\n            setLoggedIn(true);\n            console.log(res.data);\n            navigate(\"/\", { replace: true })\n            return res.email\n          }\n        })\n        .catch(err => console.log(err));\n    }\n  }\n\n  // Обработчик лайка карточки\n  function handleCardLike(card) {\n    // Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n\n      // Отправляем запрос в API для лайка или дизлайка в зависимости от наличия лайка\n      ; (isLiked ? apiConfig.deleteLike(card._id) : apiConfig.putLike(card._id))\n        .then((res) => {\n          setCards((state) => state.map((c) => (c._id === card._id ? res : c)))\n        })\n        .catch((err) => {\n          console.log(err)\n        })\n  }\n\n  // Обработчик удаления карточки\n  function handleCardDelete(card) {\n    apiConfig\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) =>\n          state.filter((c) => (c._id === card._id ? false : true))\n        )\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Обработчики кликов по кнопкам попапов и карточкам\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard)\n  }\n\n  // Закрытие всех попапов\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setSelectedCard({})\n    setIsInfoTooltipOpen(false)\n  }\n\n  // Обновление данных пользователя\n  function handleUpdateUser(data) {\n    apiConfig\n      .patchUserInfo(data)\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Обновление аватара пользователя\n  function handleUpdateAvatar(data) {\n    apiConfig\n      .patchAvatar(data)\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Добавление новой карточки\n  function handleAddPlaceSubmit(data) {\n    apiConfig\n      .postCard(data)\n      .then((res) => {\n        setCards([res, ...cards])\n      })\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Что происходит при логауте\n  function onSignOut() {\n    setLoggedIn(false)\n    localStorage.removeItem(\"jwt\");\n  }\n\n  // Что происходит при логИне\n  const onLogin = () => {\n    setLoggedIn(true);\n  }\n\n  // Рендеринг компонента\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root brd!\">\n        <div className=\"page\">\n          <Header signOut={onSignOut} />\n          <Routes>\n            <Route path=\"/sign-up\" element={<Login handleLogin={onLogin}  />} />\n            <Route path=\"/sign-in\" element={<Register />} />\n            <Route\n              path=\"/\"\n              element={\n                <ProtectedRouteElement\n                  element={Main} // Рендерим Main, если пользователь авторизован\n                  loggedIn={loggedIn}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick}\n                  onCardClick={handleCardClick}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                  cards={cards}\n                />\n              }\n            />\n          </Routes>\n          <Footer />\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateCard={handleAddPlaceSubmit}\n          />\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n          <InfoTooltip\n            isOpen={isInfoTooltipOpen}\n            onClose={closeAllPopups}\n            image={isInfoTooltipSuccessed ? successedImage : failImage}\n            alt={\n              isInfoTooltipSuccessed\n                ? \"Успешная регистрация\"\n                : \"Ошибка регистрации\"\n            }\n            message={\n              isInfoTooltipSuccessed\n                ? \"Вы успешно зарегистрировались!\"\n                : \"Что-то пошло не так! Попробуйте ещё раз.\"\n            }\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
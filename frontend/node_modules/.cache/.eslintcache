[{"/Users/yambikov/Desktop/dev/react-mesto-auth/src/index.js":"1","/Users/yambikov/Desktop/dev/react-mesto-auth/src/reportWebVitals.js":"2","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/App.js":"3","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/EditAvatarPopup.js":"4","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Header.js":"5","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/AddPlacePopup.js":"6","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Main.js":"7","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Footer.js":"8","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.js":"9","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/ImagePopup.js":"10","/Users/yambikov/Desktop/dev/react-mesto-auth/src/utils/Api.js":"11","/Users/yambikov/Desktop/dev/react-mesto-auth/src/contexts/CurrentUserContext.js":"12","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Card.js":"13","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/PopupWithForm.js":"14","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Register.js":"15","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Login.js":"16","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/ProtectedRoute.js":"17","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/AuthComponent.js":"18","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js":"19","/Users/yambikov/Desktop/dev/react-mesto-auth/src/utils/auth.js":"20"},{"size":642,"mtime":1695676474750,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1695676474750,"results":"23","hashOfConfig":"22"},{"size":8657,"mtime":1695676474743,"results":"24","hashOfConfig":"22"},{"size":968,"mtime":1695676474743,"results":"25","hashOfConfig":"22"},{"size":1060,"mtime":1695676474744,"results":"26","hashOfConfig":"22"},{"size":1515,"mtime":1695676474743,"results":"27","hashOfConfig":"22"},{"size":1562,"mtime":1695676474744,"results":"28","hashOfConfig":"22"},{"size":184,"mtime":1695676474744,"results":"29","hashOfConfig":"22"},{"size":2301,"mtime":1695676474743,"results":"30","hashOfConfig":"22"},{"size":595,"mtime":1695676474744,"results":"31","hashOfConfig":"22"},{"size":2039,"mtime":1695676474750,"results":"32","hashOfConfig":"22"},{"size":84,"mtime":1695676474745,"results":"33","hashOfConfig":"22"},{"size":1758,"mtime":1695676474743,"results":"34","hashOfConfig":"22"},{"size":720,"mtime":1695676474744,"results":"35","hashOfConfig":"22"},{"size":2410,"mtime":1695676474745,"results":"36","hashOfConfig":"22"},{"size":2150,"mtime":1695676474744,"results":"37","hashOfConfig":"22"},{"size":278,"mtime":1695676474745,"results":"38","hashOfConfig":"22"},{"size":1446,"mtime":1695498325858,"results":"39","hashOfConfig":"22"},{"size":702,"mtime":1695676474744,"results":"40","hashOfConfig":"22"},{"size":1178,"mtime":1695676474750,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"c1jbsq",{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yambikov/Desktop/dev/react-mesto-auth/src/index.js",["104"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","/Users/yambikov/Desktop/dev/react-mesto-auth/src/reportWebVitals.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/App.js",["105"],[],"import React, {useState, useEffect} from \"react\"\nimport {Routes, Route} from \"react-router-dom\"\nimport Header from \"./Header\"\nimport Main from \"./Main\"\nimport Footer from \"./Footer\"\nimport ImagePopup from \"./ImagePopup\"\nimport apiConfig from \"../utils/Api\"\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\"\nimport EditProfilePopup from \"./EditProfilePopup\"\nimport EditAvatarPopup from \"./EditAvatarPopup\"\nimport AddPlacePopup from \"./AddPlacePopup\"\nimport Login from \"./Login\"\nimport Register from \"./Register\"\nimport ProtectedRouteElement from \"./ProtectedRoute\"\nimport InfoTooltip from \"./InfoTooltip\"\nimport successedImage from \"../images/info-tooltip-success.svg\"\nimport failImage from \"../images/info-tooltip-error.svg\"\nimport * as auth from \"../utils/auth\"\nimport {useNavigate} from \"react-router-dom\"\n\nfunction App() {\n  // State для хранения состояния авторизации\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [email, setEmail] = useState(\"\")\n\n  // State для хранения массива карточек\n  const [cards, setCards] = useState([])\n\n  // State для хранения данных о текущем пользователе\n  const [currentUser, setCurrentUser] = useState({})\n\n  // State для управления видимостью попапов\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false)\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false)\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false)\n  const [isInfoTooltipOpen, setIsInfoTooltipOpen] = useState(false)\n  const [isInfoTooltipSuccessed, setIsInfoTooltipSuccessed] = useState(false)\n\n  // State для отображения попапа с изображением\n  const [selectedCard, setSelectedCard] = useState({}) // {name, link}\n\n  const navigate = useNavigate()\n\n  // Проверка залогинен ли пользователь при загрузке страницы\n  useEffect(() => {\n    handleTokenCheck()\n  }, [])\n\n  // Загрузка карточек с сервера при монтировании компонента\n  useEffect(() => {\n    apiConfig\n      .getInitialCards()\n      .then((res) => {\n        setCards(res)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  // Загрузка данных о текущем пользователе с сервера\n  useEffect(() => {\n    apiConfig\n      .getUserInfoApi()\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }, [])\n\n  // Обработчик лайка карточки\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id)\n\n    ;(isLiked ? apiConfig.deleteLike(card._id) : apiConfig.putLike(card._id))\n      .then((res) => {\n        setCards((state) => state.map((c) => (c._id === card._id ? res : c)))\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Обработчик удаления карточки\n  function handleCardDelete(card) {\n    apiConfig\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((state) =>\n          state.filter((c) => (c._id === card._id ? false : true))\n        )\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Обработчики кликов по кнопкам попапов и карточкам\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true)\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true)\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true)\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard(selectedCard)\n  }\n\n  // Закрытие всех попапов\n  function closeAllPopups() {\n    setIsEditProfilePopupOpen(false)\n    setIsAddPlacePopupOpen(false)\n    setIsEditAvatarPopupOpen(false)\n    setSelectedCard({})\n    setIsInfoTooltipOpen(false)\n  }\n\n  // Обновление данных пользователя\n  function handleUpdateUser(data) {\n    apiConfig\n      .patchUserInfo(data)\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Обновление аватара пользователя\n  function handleUpdateAvatar(data) {\n    apiConfig\n      .patchAvatar(data)\n      .then((res) => {\n        setCurrentUser(res)\n      })\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Добавление новой карточки\n  function handleAddPlaceSubmit(data) {\n    apiConfig\n      .postCard(data)\n      .then((res) => {\n        setCards([res, ...cards])\n      })\n      .then(closeAllPopups)\n      .catch((err) => {\n        console.log(err)\n      })\n  }\n\n  // Что происходит при логауте\n  function onSignOut() {\n    setLoggedIn(false)\n    localStorage.removeItem(\"jwt\")\n    setEmail(\"\")\n  }\n\n  // Что происходит при логИне\n  function onLogin(password, email) {\n    auth\n      .login(password, email)\n      .then((res) => {\n        if (res) {\n          localStorage.setItem(\"jwt\", res.token)\n          setLoggedIn(true)\n          setEmail(email)\n          navigate(\"/\", {replace: true})\n        }\n      })\n      .catch((err) => console.log(err))\n  }\n\n  function onRegister(password, email) {\n    auth\n      .register(password, email)\n      .then((res) => {\n        navigate(\"/sign-up\", {replace: true})\n        setIsInfoTooltipOpen(true)\n        setIsInfoTooltipSuccessed(true)\n      })\n      .catch((err) => {\n        console.log(err)\n        setIsInfoTooltipOpen(true)\n        setIsInfoTooltipSuccessed(false)\n      })\n  }\n\n  // Проверка токена\n  function handleTokenCheck() {\n    if (localStorage.getItem(\"jwt\")) {\n      const token = localStorage.getItem(\"jwt\")\n      auth\n        .checkToken(token)\n        .then((res) => {\n          if (res) {\n            setLoggedIn(true)\n            setEmail(res.data.email)\n            navigate(\"/\", {replace: true})\n          }\n        })\n        .catch((err) => console.log(err))\n    }\n  }\n\n  // Рендеринг компонента\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"root brd!\">\n        <div className=\"page\">\n          <Header signOut={onSignOut} email={email} />\n          <Routes>\n            <Route path=\"/sign-up\" element={<Login onLogin={onLogin} />} />\n            <Route\n              path=\"/sign-in\"\n              element={<Register onRegister={onRegister} />}\n            />\n            <Route\n              path=\"/\"\n              element={\n                <ProtectedRouteElement\n                  element={Main} // Рендерим Main, если пользователь авторизован\n                  loggedIn={loggedIn}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick}\n                  onCardClick={handleCardClick}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                  cards={cards}\n                />\n              }\n            />\n          </Routes>\n          <Footer />\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n          <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateCard={handleAddPlaceSubmit}\n          />\n          <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n          <InfoTooltip\n            isOpen={isInfoTooltipOpen}\n            onClose={closeAllPopups}\n            image={isInfoTooltipSuccessed ? successedImage : failImage}\n            alt={\n              isInfoTooltipSuccessed\n                ? \"Успешная регистрация\"\n                : \"Ошибка регистрации\"\n            }\n            message={\n              isInfoTooltipSuccessed\n                ? \"Вы успешно зарегистрировались!\"\n                : \"Что-то пошло не так! Попробуйте ещё раз.\"\n            }\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  )\n}\n\nexport default App\n","/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/EditAvatarPopup.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Header.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/AddPlacePopup.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Main.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Footer.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/ImagePopup.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/utils/Api.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/contexts/CurrentUserContext.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Card.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/PopupWithForm.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Register.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/Login.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/ProtectedRoute.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/AuthComponent.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js",[],[],"/Users/yambikov/Desktop/dev/react-mesto-auth/src/utils/auth.js",[],[],{"ruleId":"106","severity":1,"message":"107","line":5,"column":8,"nodeType":"108","messageId":"109","endLine":5,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":47,"column":6,"nodeType":"112","endLine":47,"endColumn":8,"suggestions":"113"},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleTokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["114"],{"desc":"115","fix":"116"},"Update the dependencies array to be: [handleTokenCheck]",{"range":"117","text":"118"},[1854,1856],"[handleTokenCheck]"]